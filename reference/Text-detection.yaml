openapi: 3.1.0
info:
  title: Text-detection
  version: '1.0'
  summary: MTI AI-lab service
  description: Whiteboarding exercise for AI Engineer
  contact:
    url: 'https://ailab.mti-vietnam.vn/'
    name: MTI Vietnam
  license:
    name: all rights reserved
    url: 'https://ailab.mti-vietnam.vn/'
servers:
  - url: 'http://localhost:3000/ai-lab'
paths:
  /image/async-detection:
    parameters: []
    post:
      summary: Asynchronous-text detection operation
      operationId: post-text-detection
      responses:
        '202':
          description: Accepted
          headers:
            X-detection-Id:
              schema:
                type: string
                format: uuid
                example: 401ddbba-21e8-11ec-9621-0242ac130002
              description: An unique UUID string which be generated by AI-LAB gateway service! Its also use for further fetch detection result
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  Success:
                    type: object
                    properties:
                      code:
                        type: string
                        minLength: 1
                      message:
                        type: string
                        minLength: 1
                    required:
                      - code
                      - message
                required:
                  - Success
                x-examples:
                  example-1:
                    Success:
                      code: successCode
                      message: Message
              examples:
                example-1:
                  Success:
                    code: Ok
                    message: Detection request has accepted! client should keep retrying fetch the async-get-result every 10-seconds with X-Request-Id
        '400':
          description: Invalid image binary
          headers:
            X-detection-Id:
              schema:
                type: string
              description: An unique UUID string which be generated by AI-LAB gateway service! Its also use for further fetch detection result
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        minLength: 1
                      message:
                        type: string
                        minLength: 1
                    required:
                      - code
                      - message
                required:
                  - error
                x-examples:
                  example-1:
                    error:
                      code: errorCode
                      message: ErrorMessage
              examples:
                example-1:
                  error:
                    code: string
                    message: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        minLength: 1
                      message:
                        type: string
                        minLength: 1
                    required:
                      - code
                      - message
                required:
                  - error
                x-examples:
                  example-1:
                    error:
                      code: string
                      message: string
              examples:
                example-1:
                  error:
                    code: ErrorCode
                    message: Internal database error
                example-2:
                  error:
                    code: ErrorCode
                    message: Internal commnunication to Core-service error
          headers:
            X-detection-id:
              schema:
                type: string
              description: An unique UUID string which be generated by AI-LAB gateway service! Its also use for further fetch detection result
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        minLength: 1
                      message:
                        type: string
                        minLength: 1
                    required:
                      - code
                      - message
                required:
                  - error
                x-examples:
                  example-1:
                    error:
                      code: ErrorCode
                      message: Service unvailable
          headers:
            X-detection-id:
              schema:
                type: string
              description: An unique UUID string which be generated by AI-LAB gateway service! Its also use for further fetch detection result
      description: |
        - You can call this operation to submit text-detection asynchronously
        - This operation quickly respond http-202 and including a unique <b>X-detection-Id</b> from Header for further fetch detection result
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
          application/octet-stream:
            schema:
              type: string
            examples:
              example-1: {}
        description: '[Image binary stream]'
  '/image/result-fetch/{X-detection-Id}':
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-image-result-fetch
      parameters: []
    parameters:
      - schema:
          type: string
        name: X-detection-Id
        in: path
        required: true
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
  securitySchemes:
    bearerAuth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: ''
          scopes: {}
security:
  - API Key - 1: []
